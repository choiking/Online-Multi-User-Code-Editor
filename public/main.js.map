{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/callback/callback.component.css","webpack:///./src/app/components/callback/callback.component.html","webpack:///./src/app/components/callback/callback.component.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/mock-problems.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/assets/colors.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component, inject, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(@Inject(\"auth\") private auth) {\n    auth.handleAuthentication();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { routing } from \"./app.routes\";\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { AuthService } from './services/auth.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { DataService } from './services/data.service';\nimport { CollaborationService } from './services/collaboration.service';\nimport { InputService } from './services/input.service';\n\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { SearchPipe } from './pipes/search.pipe';\nimport { CallbackComponent } from './components/callback/callback.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    CallbackComponent,\n    ProfileComponent,\n    EditorComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    routing\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  },\n  {\n    provide: \"auth\",\n    useClass: AuthService\n  },\n  {\n    provide: \"authGuard\",\n    useClass: AuthGuardService\n  },\n  {\n    provide: \"collaboration\",\n    useClass: CollaborationService\n  },\n  {\n    provide: \"input\",\n    useClass: InputService\n  }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Routes, RouterModule } from \"@angular/router\";\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { CallbackComponent } from \"./components/callback/callback.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\n\nconst appRoutes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"problems\",\n    pathMatch: \"full\"\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent\n  },\n  { path: 'callback', \n    component: CallbackComponent \n  },\n  { path: 'profile', \n    component: ProfileComponent \n  },\n  {\n    path: '**',\n    redirectTo: \"problems\",\n  },\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".loading {\\n    position: absolute;\\n    display: flex;\\n    justify-content: center;\\n    height: 100vh;\\n    width: 100vw;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    background-color: #fff;\\n  }\"","module.exports = \"<div class=\\\"loading\\\">\\n  <img src=\\\"assets/loading.svg\\\" alt=\\\"loading\\\">\\n\\n\\n\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n  <p>this is the call back page</p>\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"@media screen {\\n    #editor {\\n        height: 600px;\\n    }\\n    .lang-select {\\n      width: 100px;\\n      margin-right: 10px;\\n    }\\n    header .btn {\\n      margin: 0 5px;\\n    }\\n    footer .btn {\\n      margin: 0 5px;\\n    }\\n    .editor-footer, .editor-header {\\n      margin: 10px 0;\\n    }\\n    .cursor {\\n      /*position:absolute;*/\\n      background: rgba(0, 250, 0, 0.5);\\n      z-index: 40;\\n      width: 2px!important\\n    }\\n  }\"","module.exports = \"<header class=\\\"editor-header\\\">\\n    <select class=\\\"form-control pull-left lang-select\\\" id=\\\"language\\\" name=\\\"language\\\" [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n  \\n    <!-- reset button -->\\n    <!-- Button trigger modal -->\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n      <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span>\\n    </button>\\n  \\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Reset</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the window, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    </header>\\n\\n    \\n    <div class=\\\"row\\\">\\n      <div id=\\\"editor\\\"></div>\\n    </div>\\n\\n    <div>\\n      {{ output }}\\n    </div>\\n  \\n    <footer class=\\\"editor-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit Solution</button>\\n    </footer>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { CollaborationService } from '../../services/collaboration.service';\nimport { ActivatedRoute } from '@angular/router';\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\n  editor: any;\n\n  public languages: string[] = ['Java', 'C++', 'Python'];\n\n  language: string = 'Java';\n  \n  sessionId: string;\n\n  output: string;\n\n  defaultContent = {\n    'Java': `public class Example {\n    public static void main(String[] args) {\n      //Type your code here\n    }\n  }`,\n    'C++': `#include <iostream>\nusing namespace std;\nint main() {\n  //Type your C++ code here\n  return 0;\n}`,\n    'Python': `class Solution:\n  def example():\n    # Write your Python code here`\n  }\n\n  languageBundleName = {\n    'Java': `java`,\n    'C++': `c_cpp`,\n    'Python': `python`\n  }\n\n  constructor(@Inject('collaboration') private collaboration, private route: ActivatedRoute, @Inject('data') private data) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.sessionId = params['id'];\n      this.initEditor();\n    });  \n  }\n\n  initEditor() {\n    this.editor = ace.edit('editor');\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n    this.editor.$blockScrolling = Infinity;\n\n    document.getElementsByTagName('textarea')[0].focus();\n    this.collaboration.init(this.editor, this.sessionId);\n    this.editor.lastAppliedChange = null;\n\n    this.editor.on('change', (e) => {\n      console.log('editor changes:' + JSON.stringify(e));\n      if (this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e));\n      }\n    });\n\n    this.editor.getSession().getSelection().on('changeCursor', () => {\n      let cursor = this.editor.getSession().getSelection().getCursor();\n      console.log('cursor moves:' + JSON.stringify(cursor));\n      this.collaboration.cursorMove(JSON.stringify(cursor));\n    });\n\n    this.collaboration.restoreBuffer();\n  }\n\n  setLanguage(language: string):void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  resetEditor(): void {\n    this.editor.session.setMode(\"ace/mode/\" + this.languageBundleName[this.language]);\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.output = 'abc';\n  }\n\n  submit(): void {\n    let userCode = this.editor.getValue();\n    let data = {\n      user_code: userCode,\n      lang: this.language.toLowerCase()\n    };\n    this.data.buildAndRun(data)\n             .then(res => this.output = res);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <form class=\\\"navbar-form navbar-left\\\" (ngSubmit)=\\\"searchProblem()\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Problem\\\" [formControl]=\\\"searchBox\\\">\\n        </div>\\n      </form>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\\n          <form class=\\\"navbar-form\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"!auth.isAuthenticated()\\\" (click)=\\\"login()\\\">Sign in</button>\\n          </form>\\n        </li>\\n        <li class=\\\"dropdown\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{username}} <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a routerLink=\\\"/profile\\\">My Profile</a></li>\\n            <li><a href=\\\"#\\\">My Favorites</a></li>\\n            <li><a href=\\\"#\\\">My Submissions</a></li>\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n            <li><a href=\\\"#\\\" (click)=\\\"logout()\\\">Log Out</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n      </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n  </nav>\\n</div>\"","import { Component, OnInit, inject, Inject } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  title = \"COJ\";\n  username = \"\";\n\n  searchBox: FormControl = new FormControl();\n  subscription: Subscription;\n\n  constructor(@Inject('auth') private auth,\n              @Inject('input') private input,\n              private router : Router) { }\n\n  ngOnInit() {\n    if (this.auth.isAuthenticated()) {\n      this.username = this.auth.getProfile().nickname;\n    }\n\n    this.subscription = this.searchBox\n                            .valueChanges\n                            .pipe(debounceTime(200))\n                            .subscribe(\n                              term => {\n                                this.input.changeInput(term);\n                              }\n                            );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  searchProblem(): void {\n    this.router.navigate(['/problems']);\n  }\n\n  login(): void {\n    this.auth.login()\n              .then(profile => this.username = profile.nickname)\n              .catch(error => console.log(error));\n  }\n\n  logout(): void {\n    this.auth.logout();\n  }\n}","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\" \\n      name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">Problem Description</label>\\n        <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\" \\n        name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n          <label for=\\\"difficulty\\\">Difficulty</label>\\n          <select class=\\\"text\\\" class=\\\"form-control\\\" id=\\\"difficulty\\\" \\n          name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n            <option value=\\\"default\\\" disabled selected>Select difficulty</option>\\n            <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n              {{difficulty}}\\n            </option>\\n          </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"default\"\n});\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = [\"Easy\", \"Medium\", \"Hard\", \"Super\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n  constructor(@Inject(\"data\") private data: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(): void {\n    this.data.addProblem(this.newProblem)\n             .catch(error =>console.log(error._body));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br/>\\n    </div>\\n  </div>\\n  <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n      <app-editor></app-editor>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\nimport { ActivatedRoute} from \"@angular/router\";\nimport { DataService } from '../../services/data.service';\nimport { mapChildrenIntoArray } from '@angular/router/src/url_tree';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem : Problem;\n\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data: DataService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.data.getProblem(+params[\"id\"])\n               .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems | search: searchTerm\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty | uppercase}}</span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\nimport { Subscription } from 'rxjs';\nimport { DataService } from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n\n  problems: Problem[] = [];\n  subscriptionProblems: Subscription;\n  birthday = new Date();\n  money = 25;\n  Apr = 0.21;\n\n  searchTerm: string = '';\n  subscriptionInput: Subscription;\n\n  constructor(@Inject(\"data\") private data,\n              @Inject(\"input\") private input) { }\n\n  ngOnInit() {\n    this.getProblems();\n    this.getSearchTerm();\n  }\n\n  private getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n                                .subscribe(problems => this.problems = problems);\n  }\n\n  getSearchTerm(): void {\n    this.subscriptionInput = this.input.getInput()\n                                  .subscribe(\n                                    inputTerm => this.searchTerm = inputTerm\n                                  );\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li class=\\\"active\\\"><a data-toggle=\\\"pill\\\" href=\\\"#profile\\\">Personal Information</a></li>\\n    <li><a data-toggle=\\\"pill\\\" href=\\\"#password\\\">Change Password</a></li>\\n  </ul>\\n  <hr/>\\n  <div class=\\\"tab-content\\\">\\n    <div id=\\\"profile\\\" class=\\\"tab-pane fade in active\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" disabled value=\\\"{{email}}\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" disabled value=\\\"{{username}}\\\">\\n      </div>\\n    </div>\\n    <div id=\\\"password\\\" class=\\\"tab-pane fade\\\">\\n      <form class=\\\"navbar-form\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-large btn-success\\\" (click)=\\\"resetPassword()\\\">Reset password via email</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","// src/app/profile/profile.component.ts\n\nimport { Component, OnInit, Inject } from '@angular/core';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  profile: any;\n  email: \"\";\n  username: \"\";\n\n  constructor(@Inject('auth') public auth) { }\n\n  ngOnInit() {\n    // if (this.auth.userProfile) {\n    //   this.profile = this.auth.userProfile;\n    //   console.log(\"this.auth.userProfile exist!!\");\n    // } else {\n    //   this.auth.getProfile((err, profile) => {\n    //     this.profile = profile;\n    //   });\n    //   console.log(\"this.auth.userProfile doe not exist!!\");\n    // }\n    let profile = this.auth.getProfile();\n    console.log(\"profile email is \" + profile);\n    console.log(\"profile name is \" + profile.nickname);\n    this.email = profile.email;\n    this.username = profile.nickname;\n  }\n\n  resetPassword() {\n    this.auth.resetPassword();\n  }\n\n}","import {Problem} from \"./models/problem.model\";\n\nexport const PROBLEMS: Problem[] = [\n  {\n    id: 1,\n    name: \"Two Sum\",\n    desc: `Given an array of integers, return indices of the two numbers such that they add up to a specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.`,\n    difficulty: \"easy\"\n  },\n  {\n    id: 2,\n    name: \"3Sum\",\n    desc: `Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.`,\n    difficulty: \"medium\"\n  },\n  {\n    id: 3,\n    name: \"4Sum\",\n    desc: `Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.`,\n    difficulty: \"medium\"\n  },\n  {\n    id: 4,\n    name: \"Sudoku Solver\",\n    desc: `Write a program to solve a Sudoku puzzle by filling the empty cells.\nEmpty cells are indicated by the character '.'.\nYou may assume that there will be only one unique solution.`,\n    difficulty: \"hard\"\n  },\n  {\n    id: 5,\n    name: \"Sliding Window Maximum\",\n    desc: `Given an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.`,\n    difficulty: \"super\"\n  }\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Problem } from '../models/problem.model';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(problems: Problem[], term: string): any {\n    console.log(problems);\n    return problems.filter(\n      problem => problem.name.toLowerCase().includes(term)\n    );\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(@Inject('auth') private auth, private router: Router) { }\n\n  canActivate(): boolean {\n    if(this.auth.authenticated()) {\n      return true;\n    } else {\n      //redirect to home page if not logged in\n      this.router.navigate(['/problems']);\n      return false;\n    }\n  }\n\n  isAdmin(): boolean {\n    if (this.auth.authenticated() && this.auth.getProfile().roles.includes('admin')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}","// src/app/auth/auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as auth0 from 'auth0-js';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n\n  auth0 = new auth0.WebAuth({\n    clientID: 'iduDNvbsJ9K5sR0-JzjAQ-dFTGVt0Sfm',\n    domain: 'cs503forsam.auth0.com',\n    responseType: 'token id_token',\n    audience: 'https://cs503forsam.auth0.com/userinfo',\n    redirectUri: 'http://localhost:3000/callback',\n    scope: 'openid'\n  });\n\n  constructor(public router: Router, private http: Http) {}\n\n  public login(): void {\n    return this.auth0.authorize();\n  }\n\n  public handleAuthentication(): void {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        window.location.hash = '';\n        this.setSession(authResult);\n        this.router.navigate(['/']);\n      } else if (err) {\n        this.router.navigate(['/']);\n        console.log(err);\n      }\n    });\n  }\n\n  private setSession(authResult): void {\n    // Set the time that the Access Token will expire at\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // Go back to the home route\n    this.router.navigate(['/']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // Access Token's expiry time\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '{}');\n    return new Date().getTime() < expiresAt;\n  }\n\n  \n  public getProfile(): any {\n    return JSON.parse(localStorage.getItem('profile'));\n  }\n\n  public resetPassword() {\n    let profile = this.getProfile();\n    let url : string = `https://${'cs503forsam.auth0.com'}/dbconnections/change_password`;\n    let headers = new Headers({'content-type': 'application/json'});\n    let body = {\n      client_id: 'iduDNvbsJ9K5sR0-JzjAQ-dFTGVt0Sfm',\n      email: profile.email,\n      connection: 'Username-Password-Authentication'\n    }\n\n    let options = new RequestOptions({ headers: headers });\n\n    this.http.post(url, body, options)\n      .toPromise()\n      .then(res => console.log(res))\n      .catch(this.handleError);\n  }\n\n  private handleError(error : any) : Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n}","import { Injectable } from '@angular/core';\nimport { COLORS } from '../../assets/colors';\n\ndeclare var io: any;\ndeclare var ace: any;\n\n@Injectable()\nexport class CollaborationService {\n  collaborationSocket: any;\n  clientsInfo: Object = {};\n  clientNum: number = 0;\n\n  constructor() { }\n\n  init(editor: any, sessionId: string): void {\n      this.collaborationSocket = io(window.location.origin, {query: 'sessionId=' + sessionId});\n\n      this.collaborationSocket.on(\"change\", (delta: string) => {\n        console.log(\"collaboration: editor changes by \" + delta);\n        delta = JSON.parse(delta);\n        editor.lastAppliedChange = delta;\n        editor.getSession().getDocument().applyDeltas([delta]);\n      });\n\n      this.collaborationSocket.on(\"cursorMove\", (cursor) => {\n        console.log(\"cursor move: \" + cursor);\n        let session = editor.getSession();\n        cursor = JSON.parse(cursor);\n        let x = cursor['row'];\n        let y = cursor['column'];\n        let changeClinetId = cursor['socketId'];\n        console.log(x + ' ' + y + ' ' + changeClinetId);\n\n        if(changeClinetId in this.clientsInfo) {\n          session.removeMarker(this.clientsInfo[changeClinetId]['marker']);\n        } else {\n          this.clientsInfo[changeClinetId] = {};\n          let css = document.createElement(\"style\");\n          css.type = \"text/css\";\n          css.innerHTML = \".editor_cursor_\" + changeClinetId\n            + \" { position:absolute; background:\" + COLORS[this.clientNum] + \";\"\n            + \" z-index: 100; width:3px !important; }\";\n          document.body.appendChild(css);\n          this.clientNum ++;\n        }\n        let Range = ace.require('ace/range').Range;\n        let newMarker = session.addMarker(new Range(x, y, x, y + 1), 'editor_cursor_' + changeClinetId, true);\n        this.clientsInfo[changeClinetId]['marker'] = newMarker;\n      });\n\n      //Test\n      this.collaborationSocket.on(\"message\", (message) => {\n          console.log(\"received: \" + message);\n      })\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit(\"change\", delta);\n  }\n\n  cursorMove(cursor: string): void {\n    this.collaborationSocket.emit(\"cursorMove\", cursor);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit(\"restoreBuffer\");\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Problem} from '../models/problem.model';\nimport {PROBLEMS} from '../mock-problems';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport {BehaviorSubject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class DataService {\n  problems: Problem[] = PROBLEMS;\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: HttpClient) {}\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get<Problem[]>('api/v1/problems')\n            .toPromise()\n            .then((problems) => {\n              this.problemsSource.next(problems);\n            })\n            .catch(this.handleError);\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get<Problem>('api/v1/problems/' + id)\n                    .toPromise()\n                    .then((problem: Problem) => problem\n                    )\n                    .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const headers = new HttpHeaders({'content-type': 'application/json'});\n    return this.http.post<Problem>('api/v1/problems/', problem, {headers: headers})\n                    .toPromise()\n                    .then((mongoProblem) => {\n                      this.getProblems();\n                      return mongoProblem;\n                    })\n                    .catch(this.handleError);\n\n  }\n\n  buildAndRun(data): Promise<Object> {\n    const headers = new HttpHeaders({'content-type': 'application/json'});\n    return this.http.post('api/v1/build_and_run', data, {headers: headers})\n                    .toPromise()\n                    .then((res: Response) => {\n                        console.log(res);\n                    })\n                    .catch(this.handleError);\n\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.log('An error occurred', error);\n    return Promise.reject(error.body || error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n\n  private inputSubject$ = new BehaviorSubject<string> ('');\n\n  constructor() { }\n  \n  changeInput(term) {\n    this.inputSubject$.next(term);\n  }\n  getInput(): Observable<string> {\n    return this.inputSubject$.asObservable();\n  }\n}\n","export const COLORS: string[] = [\n  '#0000ff',\n  '#a52a2a',\n  '#00ffff',\n  '#00008b',\n  '#008b8b',\n  '#a9a9a9',\n  '#006400',\n  '#bdb76b',\n  '#8b008b',\n  '#556b2f',\n  '#ff8c00',\n  '#9932cc',\n  '#8b0000',\n  '#e9967a',\n  '#9400d3',\n  '#ff00ff',\n  '#ffd700',\n  '#008000',\n  '#4b0082',\n  '#f0e68c',\n  '#add8e6',\n  '#e0ffff',\n  '#90ee90',\n  '#d3d3d3',\n  '#ffb6c1',\n  '#ffffe0',\n  '#00ff00',\n  '#ff00ff',\n  '#800000',\n  '#000080',\n  '#808000',\n  '#ffa500',\n  '#ffc0cb',\n  '#800080',\n  '#800080',\n  '#ff0000',\n  '#c0c0c0',\n  '#ffffff',\n  '#ffff00'\n];\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}